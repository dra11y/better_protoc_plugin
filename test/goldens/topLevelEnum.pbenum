//
//  Generated code. Do not modify.
//  source: test
//

// ignore_for_file: unnecessary_import

import 'dart:core' as $core;

import 'package:protobuf/protobuf.dart' as $pb;

enum PhoneType implements $pb.ProtobufEnum {
  mobile(0, 'mobile', _omitEnumNames ? '' : 'MOBILE'),
  home(1, 'home', _omitEnumNames ? '' : 'HOME'),
  work(2, 'work', _omitEnumNames ? '' : 'WORK');

  static const PhoneType business = work;

  @$core.override final $core.int value;

  @$core.override final $core.String name;

  final $core.String dartName;

    /// protobuf.dart 3 spec:
    /// https://pub.dev/documentation/protobuf/latest/protobuf/ProtobufEnum/toString.html
    /// Returns this enum's [name] or the [value] if names are not represented.
    @$core.override
    $core.String toString() => name == '' ? value.toString() : name;
        
  static final $core.Map<$core.int, PhoneType> _byValue = $pb.ProtobufEnum.initByValue(values);
  static PhoneType? valueOf($core.int value) => _byValue[value];

  static final $core.Map<$core.String, PhoneType> _byProtoName = { for (final value in values) value.name: value };
  static final $core.Map<$core.String, PhoneType> _byDartName = values.asNameMap();
  static PhoneType? ofProtoName($core.String name) => _byProtoName[name];
  static PhoneType? ofDartName($core.String name) => _byDartName[name];

  const PhoneType(this.value, this.dartName, this.name);
}


const _omitEnumNames = $core.bool.fromEnvironment('protobuf.omit_enum_names');
